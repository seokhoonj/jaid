% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ptr.R
\name{drop_ptr}
\alias{drop_ptr}
\title{Drop data.table internal pointer}
\usage{
drop_ptr(df)
}
\arguments{
\item{df}{A data.frame or data.table.}
}
\value{
Invisibly returns \code{df} for convenience.
}
\description{
Drops the internal data.table self-reference (\code{.internal.selfref})
from an object. If the object is a \code{data.table}, the \code{"data.table"}
class is also dropped so it behaves as a plain \code{data.frame}.
}
\details{
This function mutates \code{df} in place. It is safe to call even if
\code{.internal.selfref} is absent; in that case nothing happens.
}
\examples{
\dontrun{
# data.table (already has a selfref pointer)
dt <- data.table::data.table(x = 1:3, y = c("a","b","c"))
drop_ptr(dt) # drops only the pointer
class(dt)    # no longer contains "data.table"
attr(dt, ".internal.selfref", exact = TRUE)  # NULL

# data.frame that has a selfref pointer
df <- data.frame(x = 1:3, y = c("a","b","c"))
data.table::setalloccol(df)  # attaches .internal.selfref
class(df)                    # still data.frame
drop_ptr(df)                 # drops only the pointer
attr(df, ".internal.selfref", exact = TRUE)  # NULL
}

}
\seealso{
\code{\link[data.table:setattr]{data.table::setattr()}}, \code{\link[data.table:truelength]{data.table::setalloccol()}}
}
