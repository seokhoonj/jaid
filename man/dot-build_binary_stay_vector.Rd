% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/stay.R
\name{.build_binary_stay_vector}
\alias{.build_binary_stay_vector}
\title{Build \strong{binary} stay vector from date intervals}
\usage{
.build_binary_stay_vector(dt, id_var, group_var, from_var, to_var)
}
\arguments{
\item{dt}{A data.table. Must already be ordered by grouping
variables and date columns.}

\item{id_var}{Character vector naming the ID variable(s).}

\item{group_var}{Character vector naming optional grouping variables.}

\item{from_var}{Name of the column with start dates (\code{Date}).}

\item{to_var}{Name of the column with end dates (\code{Date}).}
}
\value{
Integer vector of 0/1 values, length equal to the
total span of the expanded date intervals.
}
\description{
Internal helper that converts \verb{(from, to)} date intervals
(optionally grouped by one or more ID variables)
into a binary stay vector (0/1) at the daily level.
}
\details{
This expands intervals into a day-by-day representation where:
\itemize{
\item \code{1} means "stay present" (inside an interval)
\item \code{0} means "stay absent" (outside intervals)
}

Overlaps are not allowed; use \code{\link[=collapse_date_ranges]{collapse_date_ranges()}} first
if intervals may overlap.
}
\examples{
\dontrun{
dt <- data.table::data.table(
  id   = c(1, 1, 2),
  from = as.Date(c("2024-01-01", "2024-01-05", "2024-01-03")),
  to   = as.Date(c("2024-01-03", "2024-01-06", "2024-01-04"))
)
stay <- .build_binary_stay_vector(
  dt, id_var = "id", group_var = NULL, from_var = "from", to_var = "to"
)
head(stay)
}
}
\keyword{internal}
